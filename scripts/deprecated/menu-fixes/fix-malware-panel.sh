#!/bin/bash
# Fix panel position to left and add malware analysis launchers

echo "Fixing panel position and adding malware analysis tools..."

docker exec -u kali kali-workspace bash -c '
    # Stop panel
    xfce4-panel --quit 2>/dev/null || true
    sleep 1
    
    # Update panel position to left (p=1 is left, p=3 is right)
    sed -i "s/value=\"p=3;/value=\"p=1;/g" ~/.config/xfce4/xfconf/xfce-perchannel-xml/xfce4-panel.xml
    
    # Create launcher directories for malware tools
    mkdir -p ~/.config/xfce4/panel/launcher-20
    mkdir -p ~/.config/xfce4/panel/launcher-21
    mkdir -p ~/.config/xfce4/panel/launcher-22
    mkdir -p ~/.config/xfce4/panel/launcher-23
    mkdir -p ~/.config/xfce4/panel/launcher-24
    mkdir -p ~/.config/xfce4/panel/launcher-25
    
    # Create Ghidra launcher
    cat > ~/.config/xfce4/panel/launcher-20/ghidra.desktop <<EOF
[Desktop Entry]
Version=1.0
Type=Application
Name=Ghidra
Comment=Software Reverse Engineering Framework
Exec=ghidra
Icon=ghidra
Terminal=false
Categories=Security;ReverseEngineering;
EOF
    
    # Create Radare2 launcher
    cat > ~/.config/xfce4/panel/launcher-21/radare2.desktop <<EOF
[Desktop Entry]
Version=1.0
Type=Application
Name=Radare2
Comment=Advanced command line hexadecimal editor
Exec=xfce4-terminal -e "r2"
Icon=utilities-terminal
Terminal=false
Categories=Security;Development;
EOF
    
    # Create Cutter launcher
    cat > ~/.config/xfce4/panel/launcher-22/cutter.desktop <<EOF
[Desktop Entry]
Version=1.0
Type=Application
Name=Cutter
Comment=Free and Open Source RE Platform powered by Rizin
Exec=cutter
Icon=cutter
Terminal=false
Categories=Security;ReverseEngineering;
EOF
    
    # Create IDA Free launcher
    cat > ~/.config/xfce4/panel/launcher-23/idafree.desktop <<EOF
[Desktop Entry]
Version=1.0
Type=Application
Name=IDA Free
Comment=Interactive Disassembler
Exec=idafree
Icon=ida
Terminal=false
Categories=Security;ReverseEngineering;
EOF
    
    # Create Volatility launcher
    cat > ~/.config/xfce4/panel/launcher-24/volatility.desktop <<EOF
[Desktop Entry]
Version=1.0
Type=Application
Name=Volatility 3
Comment=Memory Forensics Framework
Exec=xfce4-terminal -e "vol"
Icon=applications-forensics
Terminal=false
Categories=Security;Forensics;
EOF
    
    # Create YARA launcher
    cat > ~/.config/xfce4/panel/launcher-25/yara.desktop <<EOF
[Desktop Entry]
Version=1.0
Type=Application
Name=YARA
Comment=Pattern matching engine for malware
Exec=xfce4-terminal -e "yara --help"
Icon=application-x-executable
Terminal=false
Categories=Security;Development;
EOF
    
    # Add the launchers to panel config
    # First, backup current config
    cp ~/.config/xfce4/xfconf/xfce-perchannel-xml/xfce4-panel.xml ~/.config/xfce4/xfconf/xfce-perchannel-xml/xfce4-panel.xml.bak
    
    # Find the plugin-ids array and add our new launchers
    # This is a bit tricky with sed, so we will use a different approach
    python3 - <<PYTHON
import xml.etree.ElementTree as ET
import os

config_file = os.path.expanduser("~/.config/xfce4/xfconf/xfce-perchannel-xml/xfce4-panel.xml")

try:
    tree = ET.parse(config_file)
    root = tree.getroot()
    
    # Find the panel-1 property
    for panel in root.findall(".//property[@name=\"panel-1\"]"):
        # Find plugin-ids
        for plugin_ids in panel.findall(".//property[@name=\"plugin-ids\"]"):
            # Get current max ID
            max_id = 0
            for value in plugin_ids.findall("value"):
                try:
                    current_id = int(value.get("value", 0))
                    max_id = max(max_id, current_id)
                except:
                    pass
            
            # Add separator before malware tools
            separator_id = max_id + 1
            separator = ET.SubElement(plugin_ids, "value")
            separator.set("type", "int")
            separator.set("value", str(separator_id))
            
            # Add our malware tool launchers
            for i in range(20, 26):
                launcher = ET.SubElement(plugin_ids, "value")
                launcher.set("type", "int")
                launcher.set("value", str(i))
    
    # Add plugin definitions
    plugins = root.find(".//property[@name=\"plugins\"]")
    if plugins is not None:
        # Add separator
        sep_prop = ET.SubElement(plugins, "property")
        sep_prop.set("name", f"plugin-{separator_id}")
        sep_prop.set("type", "string")
        sep_prop.set("value", "separator")
        sep_style = ET.SubElement(sep_prop, "property")
        sep_style.set("name", "style")
        sep_style.set("type", "uint")
        sep_style.set("value", "1")
        
        # Add launchers
        for i in range(20, 26):
            launcher_prop = ET.SubElement(plugins, "property")
            launcher_prop.set("name", f"plugin-{i}")
            launcher_prop.set("type", "string")
            launcher_prop.set("value", "launcher")
            items_prop = ET.SubElement(launcher_prop, "property")
            items_prop.set("name", "items")
            items_prop.set("type", "array")
            
            # Map plugin number to desktop file
            desktop_files = {
                20: "ghidra.desktop",
                21: "radare2.desktop",
                22: "cutter.desktop",
                23: "idafree.desktop",
                24: "volatility.desktop",
                25: "yara.desktop"
            }
            
            value = ET.SubElement(items_prop, "value")
            value.set("type", "string")
            value.set("value", desktop_files.get(i, ""))
    
    # Write the modified XML
    tree.write(config_file, encoding="UTF-8", xml_declaration=True)
    print("Panel configuration updated successfully")
    
except Exception as e:
    print(f"Error updating panel config: {e}")
    print("Will restart panel anyway...")
PYTHON
    
    # Start panel
    export DISPLAY=host.docker.internal:0
    xfce4-panel --disable-wm-check &
    
    sleep 3
    
    echo "=== Panel Fixed ==="
    echo "✓ Panel moved to LEFT side"
    echo "✓ Added malware analysis tools:"
    echo "  - Ghidra"
    echo "  - Radare2"
    echo "  - Cutter"
    echo "  - IDA Free"
    echo "  - Volatility 3"
    echo "  - YARA"
'

echo ""
echo "Panel has been fixed with malware analysis tools!"